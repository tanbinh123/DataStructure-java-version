package Chapter7_Kruskal;

import java.util.ArrayList;
import java.util.Scanner;
/*
 * ï¿½ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½kruskalï¿½ã·¨ï¿½ï¿½ï¿½ï¿½ï¿½È½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÒ»ï¿½ï¿½É­ï¿½Ö£ï¿½ï¿½ï¿½ï¿½ï¿½È½Ï¸Ã¶ï¿½ï¿½ï¿½ï¿½ï¿½Ú½Ó±ß£ï¿½
 * Ã¿ï¿½ï¿½È¡ï¿½ï¿½Ð¡È¨Öµï¿½ï¿½ï¿½Ú½Ó±ß£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú½Ó±ï¿½ï¿½ï¿½ï¿½ÓµÄ¶ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½È¶ï¿½ï¿½ã¹¹ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñ°ï¿½ï¿½
 * ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ã£¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú½Ó±ï¿½È¨Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð±È½Ï£ï¿½È¡È¨Öµï¿½ï¿½Ð¡ï¿½Ä¹ï¿½ï¿½ï¿½ï¿½ï¿?...
 * 
 * ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½Edgeï¿½à¹¹ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ú½Ó±ßµï¿½ï¿½ï¿½Ï¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú½Ó±ßµï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ã£¬È¨Öµï¿½ï¿?
 * ï¿½ï¿½ï¿½ï¿½Edgeï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½ï¿½ï¿½ï¿½Õ¶ï¿½ï¿½ï¿½ï¿½È¨Öµï¿½ï¿½ï¿½Ð±È½Ï£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
 * ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð£ï¿½ï¿½ï¿½ï¿½Õ°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë³ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
 */
/*
 * ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½6
ï¿½ï¿½ï¿½ï¿½'A,B,C'ï¿½Ä¸ï¿½Ê½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½Ï¢,ABCï¿½Ö±ï¿½ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ã£¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ã£¬È¨Öµ(ï¿½ï¿½ï¿½ï¿½-1 -1 -1ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½):

1 2 6
1 3 9
1 4 5
1 5 13
2 3 6
 */
public class Kruskal {
 /**
  * @author ï¿½ï¿½ï¿½ï¿½ï¿?
  * @date 2015-02-13 20:23
  */
 
 /*
  * Max:ï¿½ï¿½ï¿½å¶¥ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
  * edge:ï¿½ï¿½ï¿½ï¿½edgeï¿½ï¿½ï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½Edgeï¿½ï¿½ï¿½ï¿½
  * target:ï¿½ï¿½ï¿½ï¿½trget,ï¿½æ´¢ï¿½ï¿½ï¿½ÕµÃµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Edgeï¿½ï¿½ï¿½ï¿½
  * parent:ï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  * n:ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  */
 int Max=100;
 ArrayList<Edge>edge=new ArrayList<Edge>();
 ArrayList<Edge>target=new ArrayList<Edge>();
 int[] parent=new int[Max];
 Float TheMax=Float.MAX_VALUE;
 int n;
 
 public void init(){
  /**
   * p:ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½
   * q:ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
   * w:ï¿½ßµï¿½È¨Öµ
   * n:ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
   */
  Scanner scan =new Scanner(System.in);
  int p,q;
  double w;
  System.out.println("ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¸ï¿½ï¿½ï¿?:");
  n=scan.nextInt();
  System.out.println("ï¿½ï¿½ï¿½ï¿½'A,B,C'ï¿½Ä¸ï¿½Ê½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½Ï¢,ABCï¿½Ö±ï¿½ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ã£¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ã£¬È¨Öµ(ï¿½ï¿½ï¿½ï¿½-1 -1 -1ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½):");
  while(true){
   p=scan.nextInt();
   q=scan.nextInt();
   w=scan.nextDouble();
   if(p<0||q<0||w<0)break;
   Edge e=new Edge();
   e.start=p;
   e.end=q;
   e.weight=w;
   edge.add(e);
  }
  for(int i=1;i<=n;++i){          //ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½Ï¢ï¿½ï¿½ï¿½ï¿½
   parent[i]=i;
  }
 }
 
 /*
  * ï¿½ï¿½ï¿½ï¿½Ï²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½Ä½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿?
  */
 public void union(int j,int k){
  for(int i=1;i<=n;++i){
   if(parent[i]==j)
    parent[i]=k;
  }
 }
 
 public void kruskal(){
  int i=0;                 //ï¿½ï¿½ï¿½ï¿½
  while(i<n-1&&edge.size()>0){       //ï¿½ï¿½ï¿½Ö»ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ß»ï¿½ï¿½ï¿½Ã»ï¿½Ð±ï¿½ï¿½ï¿½ï¿½ï¿?
   double min=Double.MAX_VALUE;
   Edge temp=null; 
   for(int j=0;j<edge.size();++j){      //ï¿½ï¿½ï¿½ï¿½Í¼ï¿½ï¿½
    Edge tt=edge.get(j);
    if(tt.weight<min){           //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¨Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    min=tt.weight;     
    temp=tt;
    }
  }
  
  //ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½
  int jj=parent[temp.start];
  int kk=parent[temp.end];
  
  
  if(jj!=kk){
   ++i;                 //ï¿½ï¿½endï¿½ï¿½Îªï¿½ï¿½Ò»ï¿½ï¿½ï¿½ßµï¿½start,Ñ°ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½
   target.add(temp);           //ï¿½ï¿½ï¿½Òµï¿½ï¿½Ä±ß·ï¿½ï¿½ï¿½Ä¿ï¿½ê¼¯ï¿½ï¿½ï¿½ï¿½
   union(jj,kk);             
  }
  edge.remove(temp);           //ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½É¾ï¿½ï¿½
  }
  System.out.println("ï¿½ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â·ï¿½ï¿½ï¿½ï¿½:");
  for(int k=0;k<target.size();++k){     //ï¿½ï¿½ï¿½ï¿½ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
   Edge e=target.get(k);
   System.out.println(e.start+"-->"+e.end);
  }
 }
 
 public static void main(String[] args) {
  // TODO Auto-generated method stub
   Kruskal kr=new  Kruskal();
   kr.init();
   kr.kruskal();
 }
}
/*
 * start:ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½
 * end:ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 * weight:È¨Öµ
 */
class Edge{
 public int start;
 public int end;
 public double weight;
}
